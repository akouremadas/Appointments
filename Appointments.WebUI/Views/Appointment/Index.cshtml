@model IEnumerable<Appointments.Domain.Entities.Appointment>

@{
    ViewBag.Title = "Index";
}

<h3>Appointments Index</h3>

<p>
    @Html.ActionLink("Create New Appointment", "Create", null, new { @class = "btn btn-primary btn-sm" })
</p>

<br />
<table id="index_appointments" class="table table-sm table-responsive-lg table-hover table-striped table-bordered text-center">
    <thead>
        <tr>
            <th>#</th>
            @if (User.IsInRole("Admin") || User.IsInRole("Supervisor") || User.IsInRole("Team Leader") || User.IsInRole("Handler"))
            {
                <th class="text-center">
                    @Html.DisplayNameFor(model => model.SalesMan)
                </th>
            }
            <th>
                @Html.DisplayNameFor(model => model.Client.Name)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Result.ResultName)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.StartDateTime)
            </th>
            <th>
                @Html.DisplayNameFor(model => model.Comments)
            </th>
            <th class="noExport">Actions</th>
            @*<th></th>*@
        </tr>
    </thead>

    <tbody>

        @foreach (var item in Model)
        {
            if ((item.IsDeleted == false) || (item.CreatedBy == User.Identity.Name))
            {
                <tr>
                    <td></td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Supervisor") || User.IsInRole("Team Leader") || User.IsInRole("Handler"))
                    {
                        <td>
                            @Html.DisplayFor(modelItem => item.SalesMan)
                        </td>
                    }
                    <td>
                        @Html.DisplayFor(modelItem => item.Client.Name)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Result.ResultName)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.StartDateTime)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Comments)
                    </td>
                    @if (User.IsInRole("Admin") || User.IsInRole("Supervisor") || User.IsInRole("Team Leader") || User.IsInRole("Handler"))
                    {
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" })
                                @Html.ActionLink("Delete", "Delete", new { id = item.Id }, new { @class = "btn btn-danger btn-sm" })
                            </div>
                        </td>
                    }
                    else
                    {
                        <td>
                            <div class="btn-group btn-group-sm" role="group">
                                @Html.ActionLink("Details", "Details", new { id = item.Id }, new { @class = "btn btn-info btn-sm" })
                                @Html.ActionLink("Edit", "Edit", new { id = item.Id }, new { @class = "btn btn-warning btn-sm" })
                            </div>
                        </td>
                    }

                </tr>
                @*else
                    {
                                    if (item.CreatedBy == User.Identity.Name)
                                    {
                            <tr>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Client.Name)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Result.ResultName)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.StartDateTime)
                                </td>
                                <td>
                                    @Html.DisplayFor(modelItem => item.Comments)
                                </td>
                                <td>
                                    @Html.ActionLink("Edit", "Edit", new { id = item.Id }) |
                                    @Html.ActionLink("Details", "Details", new { id = item.Id })
                                </td>
                            </tr>
                                    }
                                }
                            }*@

            }
        }
    </tbody>
    <tfoot>
        <tr>
            <th style="column-width:inherit" class="noSearch"></th>
            <th style="column-width:inherit"></th>
            <th style="column-width:inherit"></th>
            <th style="column-width:inherit"></th>
            <th style="column-width:inherit"></th>
            <th style="column-width:inherit"></th>
            <th style="column-width:inherit" class="noSearch"></th>
        </tr>
    </tfoot>

</table>

<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/jquery.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.2/css/buttons.dataTables.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.2.7/css/select.dataTables.min.css">
@*<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/1.10.19/css/dataTables.bootstrap4.min.css">*@
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/select/1.2.7/css/select.bootstrap4.min.css">
<link rel="stylesheet" type="text/css" href="https://cdn.datatables.net/buttons/1.5.2/css/buttons.bootstrap4.min.css">

<style type="text/css" class="init">
</style>
@section Scripts {
    <script type="text/javascript" charset="utf8" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.js"></script>
    <script type="text/javascript" language="javascript" src="https://code.jquery.com/jquery-3.3.1.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.19/js/jquery.dataTables.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/select/1.2.7/js/dataTables.select.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/dataTables.buttons.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.flash.min.js"></script>
    @*<script type="text/javascript" language="javascript" src="https://cdn.datatables.net/1.10.19/js/dataTables.bootstrap4.min.js"></script>*@
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.bootstrap4.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/jszip/3.1.3/jszip.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/pdfmake.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdnjs.cloudflare.com/ajax/libs/pdfmake/0.1.36/vfs_fonts.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.html5.min.js"></script>
    <script type="text/javascript" language="javascript" src="https://cdn.datatables.net/buttons/1.5.2/js/buttons.print.min.js"></script>
    <script type="text/javascript">
        $(document).ready(function () {

            var t = $('#index_appointments').DataTable({
                orderMulti: true,
                pagingType: "full_numbers",
                orderClasses: true,
                ordering: true,
                responsive: true,
                stateSave: true,
                columnDefs: [{
                    searchable: false,
                    orderable: false,
                    targets: 0
                }],
                order: [[1, 'asc']],
                select: {
                    style: 'multi'
                },
                dom: 'Brtip',
                buttons:
                    [
                        {
                            extend: 'pageLength',
                            className: 'btn btn-secondary btn-sm'
                        },

                        {
                            extend: 'collection',
                            autoClose: true,
                            text: 'Export ...',
                            className:'btn btn-secondary btn-sm',
                            buttons:
                                [
                                    {
                                        extend: 'copy',
                                        text: "Copy to Clipboard",
                                        exportOptions:
                                        {
                                            columns: "thead th:not(.noExport)"
                                        }
                                    },
                                    {
                                        extend: 'pdf',
                                        title: 'Data Export_' + Date.now(),
                                        exportOptions:
                                        {
                                            columns: "thead th:not(.noExport)"
                                        }
                                    },
                                    {
                                        extend: 'excel',
                                        title: 'Data Export_' + Date.now(),
                                        exportOptions:
                                        {
                                            columns: "thead th:not(.noExport)"
                                        }
                                    }
                                ]
                        },
                        {
                            extend: 'collection',
                            text: 'Select ...',
                            className: 'btn btn-secondary btn-sm',
                            autoClose: true,
                            buttons:
                                [
                                    'selectAll',
                                    'selectNone',
                                ]
                        },

                    ],
                lengthMenu: [[10, 25, 50, -1], ['10', '25', '50', 'Show all']]
            });

            t.buttons().container()
                .appendTo('#index_appointments_wrapper .col-md-6:eq(0)');

            t.on('order.dt search.dt', function () {
                t.column(0, { search: 'applied', order: 'applied' }).nodes().each(function (cell, i) {
                    cell.innerHTML = i + 1;
                    t.cell(cell).invalidate('dom');
                });
            }).draw();



            $("#index_appointments tfoot th:not(.noSearch)").each(function (i) {
                $(this).html('<input type="text" class="text-center" placeholder="Search"/>');
            });
            // Apply the search
            t.columns().every(function () {
                var that = this;

                $('input', this.footer()).on('keyup change', function () {
                    if (that.search() !== this.value) {
                        that
                            .search(this.value)
                            .draw();
                    }
                });
            });

        });
    </script>
}